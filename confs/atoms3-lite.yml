## used Atom is a S3 lite version: See: https://shop.m5stack.com/products/atoms3-dev-kit-w-0-85-inch-screen
esp32:
  board: esp32-s3-devkitc-1
  variant: esp32s3
  flash_size: 8MB

esphome:
  on_boot:
    priority: 200
    then:
      - delay: 1s
      - component.update: frame_size_sensor
      - delay: 30s
      - switch.turn_off:
          id: led_switch
  platformio_options:
    # Run CPU at 160Mhz to fix mhi_ac_ctrl_core.loop error: -2
    board_build.f_cpu: 240000000L

light:
#G35=RGB WS2812C-2020
  - platform: esp32_rmt_led_strip
    name: Led
    id: led
    icon: mdi:lightbulb
    entity_category: diagnostic
    internal: true
    rgb_order: GRB
    pin: 35
    num_leds: 4
    # RMT 0 channels will be occupied by IR
    rmt_channel: 1
    chipset: ws2812
    restore_mode: ALWAYS_ON  #OFF?

#G41=Button
binary_sensor:
  - platform: gpio
    name: Button LED
    id: g41button
    icon: mdi:button-pointer
    entity_category: diagnostic
    pin:
      number: GPIO41
      inverted: true
      mode:
        input: true
        pullup: true
    internal: true
    filters:
      - delayed_off: 10ms
    # Toggle the switch when the pushbutton is pressed
    on_press:
      then:
        - switch.toggle: led_switch

number:
    ## Set led brightness
  - platform: template
    id: led_brightness
    name: Led Brightness
    icon: mdi:toggle-switch-variant
    mode: slider
    entity_category: diagnostic
    optimistic: true
    min_value: 0
    max_value: 100
    step: 10
    initial_value: 70
    restore_value: yes
    unit_of_measurement: "%"
    on_value:
      then:
        - if:
            condition:
              - light.is_on: led
            then:
            - light.turn_on:
                id: led
                brightness: !lambda |-
                  // output value must be in range 0 - 1.0
                  return id(led_brightness).state / 100.0;

switch:
  - platform: template
    id: led_switch
    name: Led switch
    icon: mdi:toggle-switch-outline
    entity_category: diagnostic
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON 
    lambda: return id(led_switch).state;
    turn_on_action:
      - light.turn_on:
          id: led
          brightness: !lambda |-
            // output value must be in range 0 - 1.0
            return id(led_brightness).state / 100.0;
    turn_off_action:
      - light.turn_off:
          id: led